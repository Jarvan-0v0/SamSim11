#配置根Logger。  INFO为输出信息的级别，A1,A4分别为输出方案的名称
log4j.rootLogger=INFO,A2

#指定该输出方案的信息输出目的地为控制台
#log4j.appender.A1 = org.apache.log4j.ConsoleAppender
#设定输出的布局为模式布局：
#log4j.appender.A1.layout = org.apache.log4j.PatternLayout
#指定模式的具体参数：
#log4j.appender.A1.layout.ConversionPattern =[%d{HH:mm:ss}] [%t] %-5p - %m %n


#信息输出到文件当中。文件最大不超过1MB，超过之后将清除后再写入。
#也可以直接用FileAppender，不进行Rolling，那么所以的日志信息都将追加到原信息的后面。MaxBackupIndex指的是最大备份数目。
#每天产生一个日志文件
log4j.appender.A2=org.apache.log4j.DailyRollingFileAppender 
log4j.appender.A2.DatePattern='.'yyyy-MM-dd
#文件大小到达指定尺寸的时候产生新文件
#log4j.appender.A2=org.apache.log4j.RollingFileAppender
# 文件最大尺寸
#log4j.appender.A2.MaxFileSize = 1MB
# 备份数
#log4j.appender.A2.MaxBackupIndex = 3
# 指定消息输出到serverlog.txt文件。
log4j.appender.A2.file=D\:\\blkj\\log4j\\serverlog.txt
# true:添加  false:覆盖
log4j.appender.A2.Append=true
log4j.appender.A2.layout = org.apache.log4j.PatternLayout
#[%d] %-4r [%t] %-5p %c %x - %m %n
log4j.appender.A2.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH\:mm\:ss,SSS} method\:%l%n%m%n


#定义A3输出到数据库。指定输出方案为JDBCAppender，即能过JDBC把日志自动写入到远程数据库当中。
#指定输出方案为JDBCAppender，即能过JDBC把日志自动写入到远程数据库当中。BufferSize指定缓冲区的大小，当输出内容达到缓冲区的大小时，就把数据写入数据库一次。
#log4j.appender.A3 = org.apache.log4j.jdbc.JDBCAppender
#log4j.appender.A3.BufferSize = 40
#log4j.appender.A3.Driver = com.mysql.jdbc.Driver
#log4j.appender.A3.URL = jdbc:mysql://localhost:3306/redhat?useUnicode=true&characterEncoding=UTF-8
#log4j.appender.A3.user = root
#log4j.appender.A3.Password = 123456
#log4j.appender.A3.layout = org.apache.log4j.PatternLayout
#'%x','%d','%C','%p','%m'
#log4j.appender.A3.layout.ConversionPattern = INSERT INTO log4j(time,logger,level,name,message) values('%d', '%t', '%-5p', '%c', '%m')

#信息输出到HTML文件当中，并且是按时间段自动生成文件，比如，每隔一个小时或一天、半天生成一个HTML文件：
#log4j.appender.A4 = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.A4.File = D\:\\output\\serverlog.html
#log4j.appender.A4.DatePattern='.'yyyy-MM-dd-HH'.html'
#log4j.appender.A4.layout = org.apache.log4j.HTMLLayout 

